service: tasks-api

frameworkVersion: "3"
useDotenv: true

provider:
  name: aws
  runtime: python3.9
  region: us-west-2
  stage: ${opt:stage, 'development'}
  logRetentionInDays: 30
  environment:
    APP_ENVIRONMENT: ${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scane
            - dynamodbGetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "Fn::GetAtt": [TasksAPITable, Arn]
            - "Fn::Join":
                ["/", ["Fn::GetAtt": [TasksAPITable, Arn], "index", "*"]]

functions:
  API:
    handler: main.handle
    timeout: 10
    memorySize: 512
    events:
      - http:
          path: /{proxy+}
          method: any
          cors:
            origin: ${env:ALLOWED_ORIGINS}
            maxAge: 60

custom:
  pythonRequirements:
    usePoetry: true
    noDeploy:
      - boto3
      - botocore
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-tasks-api

plugins:
  - serverless-python-requirements

resources:
  - ${file(resources/dynamodb.yml)}
